version: "3.3"

services:
  db-node-1:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db-node-1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: "1"
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    healthcheck:
      test: '/usr/bin/mariadb --user=stud --password=stud --execute "SHOW DATABASES;"'
      timeout: 20s
      retries: 5
    volumes:
      - db-node-1-data:/var/lib/mysql

  db-node-2:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db-node-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: "1"
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    healthcheck:
      test: '/usr/bin/mariadb --user=stud --password=stud --execute "SHOW DATABASES;"'
      timeout: 20s
      retries: 5
    volumes:
      - db-node-2-data:/var/lib/mysql

  db-node-3:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db-node-3
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: "1"
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3363:3306
    healthcheck:
      test: '/usr/bin/mariadb --user=stud --password=stud --execute "SHOW DATABASES;"'
      timeout: 20s
      retries: 5
    volumes:
      - db-node-3-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    command: >
      --initial
    volumes:
      - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: '/usr/bin/mariadb --host=db-node-2 --port=3306 --user=stud --password=stud --execute "SHOW DATABASES;" && /usr/bin/mariadb --host=db-node-3 --port=3306 --user=stud --password=stud --execute "SHOW DATABASES;"'
      timeout: 20s
      retries: 5
    depends_on:
      db-node-2:
        condition: service_healthy
      db-node-3:
        condition: service_healthy
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: auth-service
    environment:
      - DB_HOST=db-node-1
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - AUTH_PORT=8081
    ports:
      - 8081:8081
    networks:
      - arch-network
    depends_on:
      db-node-1:
        condition: service_healthy

  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    container_name: user-service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - AUTH_HOST=auth-service
      - AUTH_PORT=8081
      - USER_PORT=8082
    ports:
      - 8082:8082
    networks:
      - arch-network
    depends_on:
      db-node-1:
        condition: service_healthy
      proxysql:
        condition: service_healthy

  blog-service:
    build:
      context: .
      dockerfile: services/blog-service/Dockerfile
    container_name: blog-service
    environment:
      - DB_HOST=db-node-1
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - AUTH_HOST=auth-service
      - AUTH_PORT=8081
      - BLOG_PORT=8083
    ports:
      - 8083:8083
    networks:
      - arch-network
    depends_on:
      db-node-1:
        condition: service_healthy

  messanger-service:
    build:
      context: .
      dockerfile: services/messanger-service/Dockerfile
    container_name: messanger-service
    environment:
      - DB_HOST=db-node-1
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - AUTH_HOST=auth-service
      - AUTH_PORT=8081
      - MESSANGER_PORT=8084
    ports:
      - 8084:8084
    networks:
      - arch-network
    depends_on:
      db-node-1:
        condition: service_healthy

volumes:
  db-node-1-data:
  db-node-2-data:
  db-node-3-data:
  proxysql-data:

networks:
  arch-network:
    driver: "bridge"
    external: false
